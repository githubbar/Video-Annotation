from PyQt4.QtGui import *
from PyQt4.QtCore import *
from delegates import *
        
class VariableWidget(QTableWidget):
    deleteKeyPressed = pyqtSignal()      
    variableTypes = ('String', 'Integer', 'DropDown', 'Double', 'Yes/No',  'Time',  'File', 'Font')
#    permanentVariableNames = ['id', 'videoname', 'startTime', 'stopTime']
#    permanentVariableParams = [
#        ['String', True, '', False, ''], 
#        ['File', True, '', False, ''], 
#        ['Time', True, '', True, ''], 
#        ['Time', True, '', True, '']
#                                        ]
    permanentVariableNames = ['tripType','description', 'tags', 'category', 'purchased', 'shopped',  'phone', 'employee']

    permanentVariableParams = [        
        ['DropDown', True, '', False, '',  ['fill in', 'routine', 'stock up', 'occasion'] ],                                    
        ['String', True, '', True, '', ''], 
        ['String', True, '', True, '', ''], 
        ['DropDown', True, '', True, '', ''] , 
        ['Yes/No', True, '', True, '', ''] , 
        ['Yes/No', True, '', True, '', ''] , 
        ['Yes/No', True, '', True, '', ''] , 
        ['Yes/No', True, '', True, '', ''] 
                                        ]
     
    def __init__(self, parent):
        QTableWidget.__init__(self, parent)
        self.delegates = [UniqueLineEditDelegate(None,  0), DropDownDelegate(self.variableTypes,  QVariant(self.variableTypes[0])),  
                                  CheckBoxDelegate(), CheckBoxDelegate(),  ButtonDelegate('...', self.displayChoices)]
        
        self.setItemDelegateForColumn(0, self.delegates[0])                
        self.setItemDelegateForColumn(1, self.delegates[1])                
        self.setItemDelegateForColumn(2, self.delegates[2])
        self.setItemDelegateForColumn(4, self.delegates[3])
        self.setItemDelegateForColumn(6, self.delegates[4])
        self.itemChanged.connect(self.onItemChanged)
        
    def addVariable(self):
        row = self.rowCount()
        self.insertRow(row)
        self.setItem(row,  0,  QTableWidgetItem('unknown'))
        self.setItem(row,  1,  QTableWidgetItem('String'))        
        self.setItem(row,  2,  QTableWidgetItem(False))
        self.setItem(row,  3,  QTableWidgetItem(''))
        self.setItem(row,  4,  QTableWidgetItem(False))
        self.setItem(row,  5,  QTableWidgetItem(''))
        self.setItem(row,  6,  QTableWidgetItem(''))

        self.item(row, 2).setData(EditorEnabledRole,  True)
        self.item(row, 4).setData(EditorEnabledRole,  True)
    
    def onItemChanged(self, it):
        if it.column() == 1 and self.item(it.row(), 6):
            self.item(it.row(), 6).setData(EditorEnabledRole, it.data(Qt.DisplayRole) == 'DropDown');
            
    def removeVariable(self):
        for i in self.selectedItems():
            if not self.item(i.row()).toString() in permanentVariableNames:
                self.removeRow(i.row())


    def displayChoices(self, choices):
        dlg = ChoicesDialog(choices.toList(), self.parent())      
        if dlg.exec_() == QDialog.Accepted:
            choices = []
            for i in range(dlg.choices.count()):
                choices.append(dlg.choices.item(i).text())
            return QVariant(choices)
        else:
            return choices
            
