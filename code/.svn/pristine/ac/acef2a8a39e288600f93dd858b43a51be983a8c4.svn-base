from PyQt4.QtGui import *
from PyQt4.QtCore import *
from delegates import *
        
class VariableWidget(QTableWidget):
    deleteKeyPressed = pyqtSignal()      
    variableTypes = ('String', 'Number', 'Yes/No')
     
    def __init__(self, parent):
        QTableWidget.__init__(self, parent)
        self.delegates = (UniqueLineEditDelegate(None,  0), DropDownDelegate(self.variableTypes,  QVariant(self.variableTypes[0])),  CheckBoxDelegate(None, 2), CheckBoxDelegate(None, 4))
        
        self.setItemDelegateForColumn(0, self.delegates[0])                
        self.setItemDelegateForColumn(1, self.delegates[1])                
        self.setItemDelegateForColumn(2, self.delegates[2])
        self.setItemDelegateForColumn(4, self.delegates[3])
        
        
    def addVariable(self):
        row = self.rowCount()
        self.insertRow(row)
        self.setItem(row,  0,  QTableWidgetItem('unknown'))
        self.setItem(row,  1,  QTableWidgetItem('String'))        
        self.setItem(row,  2,  QTableWidgetItem(False))
        self.setItem(row,  3,  QTableWidgetItem(''))
        self.setItem(row,  4,  QTableWidgetItem(False))
        self.setItem(row,  5,  QTableWidgetItem(''))
    
    def removeVariable(self):
        for i in self.selectedItems():
            self.removeRow(i.row())

class CenteredCheckBox(QWidget):
    def __init__(self,  parent = None):
        QWidget.__init__(self, parent)
        layout = QHBoxLayout(self)
        layout.addWidget(QCheckBox())
        layout.setAlignment(Qt.AlignCenter)
        layout.setMargin(0)
        
class VariableTypeCombo(QComboBox):
    def __init__(self,  parent = None):
        QComboBox.__init__(self, parent)
        self.addItems()
        

        
